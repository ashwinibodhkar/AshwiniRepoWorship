{"version":3,"sources":["webpack:///./src/pages/artist.js","webpack:///./src/components/iconsbar/navigationLine.js","webpack:///./node_modules/@material-ui/icons/QueueMusic.js","webpack:///./src/components/seo.js"],"names":["ArtistPage","data","title","fluid","className","type","allMarkdownRemark","edges","map","node","lg","frontmatter","featureImage","childImageSharp","to","fields","slug","ArtistQuery","iconsbar","_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","d","SEO","description","lang","meta","metaImage","image","pathname","site","useStaticQuery","metaDescription","siteMetadata","src","siteUrl","canonical","htmlAttributes","titleTemplate","link","rel","href","name","content","keywords","property","author","concat","itemprop","width","height","defaultProps"],"mappings":"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","file":"component---src-pages-artist-js-033cdb81fe9148a85526.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport SEO from \"../components/seo\"\r\nimport { Container, Row, Col } from \"react-bootstrap\"\r\nimport Img from 'gatsby-image'\r\nimport Iconsbar from \"../components/iconsbar/navigationLine\";\r\nimport './category.css'\r\n\r\n\r\n\r\nconst ArtistPage = ({data,title}) => (\r\n \r\n  <div>\r\n    <SEO title=\"Artist Page\" />\r\n    {/* */}\r\n   \r\n    <Iconsbar />\r\n    <Container fluid className=\"catBg  \">           \r\n      <Container>\r\n        <div >\r\n          <h2 className=\"text-center text-white pt-2 pb-5\">ABOUT ARTIST</h2>\r\n          <Row>\r\n            <Col className=\"mainCard text-center\">\r\n            <ul type=\"none\" className=\"p-0\">\r\n              {data.allMarkdownRemark.edges.map(({node}) => (\r\n                  <Col lg={3} className=\"catCard \">\r\n                  <li >\r\n                  <Img fluid={node.frontmatter.featureImage.childImageSharp.fluid} />\r\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n                  \r\n                  </li>\r\n                  </Col>\r\n                ))}\r\n              </ul>            \r\n            </Col>\r\n          </Row>\r\n          \r\n        </div>      \r\n      </Container>\r\n      \r\n    </Container>  \r\n  </div>\r\n    \r\n  \r\n)\r\n\r\nexport default ArtistPage\r\n\r\n\r\n\r\nexport const ArtistQuery = graphql`\r\n\r\n  query{\r\n    site{\r\n      siteMetadata{\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"\\/artist/\"}},\r\n                      sort: { fields: [frontmatter___title], order: ASC }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            artist\r\n            featureImage{\r\n              childImageSharp{\r\n                fluid(maxWidth: 500, quality: 100) {\r\n                  ...GatsbyImageSharpFluid\r\n                  ...GatsbyImageSharpFluidLimitPresentationSize\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }  \r\n`","import React from 'react'\r\n\r\nimport {Link} from 'gatsby';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Row,Col} from 'react-bootstrap'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport QueueMusicIcon from '@material-ui/icons/QueueMusic';\r\nimport HeartIcon from '@material-ui/icons/Favorite'\r\nimport Searchjs from \"../searchBar/search\";\r\nimport \"./navigationList.css\"\r\n\r\n\r\n\r\nconst iconsbar = () => (\r\n    \r\n    <div>\r\n      <Row className=\"bottomBar\">\r\n      <Col >\r\n        <Link to=\"/\">\r\n          <HomeIcon  />\r\n          <p>Home</p>\r\n        </Link>\r\n      </Col>\r\n      <Col>\r\n        <Link to=\"/favourites\">\r\n          <HeartIcon />\r\n          <p>Favourites</p>\r\n        </Link>\r\n      </Col>\r\n      <Col >\r\n        <Searchjs />\r\n        <p>Search</p>\r\n      </Col>\r\n      \r\n      <Col >\r\n      <Link to=\"/allsongs\">\r\n        <QueueMusicIcon  />\r\n        <p>All List</p>\r\n        </Link>\r\n      </Col>\r\n      \r\n    </Row>\r\n    \r\n  </div>\r\n\r\n)\r\n\r\n\r\nexport default iconsbar\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15 6H3v2h12V6zm0 4H3v2h12v-2zM3 16h8v-2H3v2zM17 6v8.18c-.31-.11-.65-.18-1-.18-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3V8h3V6h-5z\"\n}), 'QueueMusic');\n\nexports.default = _default;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, image: metaImage, title, pathname }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            keywords\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const image =\r\n    metaImage && metaImage.src\r\n      ? `${site.siteMetadata.siteUrl}${metaImage.src}`\r\n      : null\r\n  const canonical = pathname ? `${site.siteMetadata.siteUrl}${pathname}` : null\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      link={\r\n        canonical\r\n          ? [\r\n              {\r\n                rel: \"canonical\",\r\n                href: canonical,\r\n              },\r\n            ]\r\n          : []\r\n      }\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: \"keywords\",\r\n          content: site.siteMetadata.keywords,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ]\r\n        .concat(\r\n          metaImage\r\n            ? [\r\n                {\r\n                  property: \"og:image\",\r\n                  itemprop:\"image\",\r\n                  content: image,\r\n                },\r\n                {\r\n                  property: \"og:image:width\",\r\n                  content: metaImage.width,\r\n                },\r\n                {\r\n                  property: \"og:image:height\",\r\n                  content: metaImage.height,\r\n                },\r\n                {\r\n                  name: \"twitter:card\",\r\n                  content: \"summary_large_image\",\r\n                },\r\n              ]\r\n            : [\r\n                {\r\n                  name: \"twitter:card\",\r\n                  content: \"summary\",\r\n                },\r\n              ]\r\n        )\r\n        .concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n  image: PropTypes.shape({\r\n    src: PropTypes.string.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n  }),\r\n  pathname: PropTypes.string,\r\n}\r\n\r\nexport default SEO"],"sourceRoot":""}